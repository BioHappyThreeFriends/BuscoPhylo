from pathlib import Path


#---- setup config ----
configfile: "config/default.yaml"

cluster_log_dir_path = Path(config["cluster_log_dir"]) #.absolute()
genome_dir_path = Path(config["genome_dir"]) #.absolute()

output_dir_path =  Path(config["output_dir"]) #.absolute()
busco_dir_path = output_dir_path / config["busco_dir"]
mafft_dir_path = output_dir_path / config["mafft_dir"]

log_dir_path = output_dir_path / config["log_dir"]
benchmark_dir_path = output_dir_path / config["benchmark_dir"]

if "species_list" not in config:
    config["species_list"] = [d.name[:-6] for d in genome_dir_path.iterdir() if d.is_file()]

def ids_list(common_ids):
    result = []
    with open(common_ids, 'r') as file:
        for line in file:
            result.append(line.strip())
    return result

localrules: all

rule all:
    input:
        expand(busco_dir_path / "{species}/short_summary_{species}.txt", species=config["species_list"]),
        busco_dir_path / "single_copy_busco_sequences.common.ids",
        directory(busco_dir_path / "merged_sequences"),
        expand(busco_dir_path / "merged_sequences" / "merged_{sample}.fna", sample=ids_list(busco_dir_path / "single_copy_busco_sequences.common.ids")),
        mafft_dir_path / "{sample}"
        # directory(mafft_dir_path)
        # directory(mafft_dir_path / "slurm"),
        # aggregate_input,
        # directory(mafft_dir_path / "output")


#---- load rules ----
include: "rules/busco.smk"
include: "rules/common_ids.smk"
include: "rules/mafft.smk"