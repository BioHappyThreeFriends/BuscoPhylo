from pathlib import Path
import os

#---- setup config ----
configfile: "config/default.yaml"

#---- setup paths ----
cluster_log_dir_path = Path(config["cluster_log_dir"])
genome_dir_path = Path(config["genome_dir"])
log_dir_path = Path(config["log_dir"])
benchmark_dir_path = Path(config["benchmark_dir"])
output_dir_path = Path(config["output_dir"])

busco_dir_path = output_dir_path / config["busco_dir"]
merged_sequences_dir_path = busco_dir_path / config["merged_sequences_dir"]
mafft_dir_path = output_dir_path / config["mafft_dir"]
gblocks_dir_path = output_dir_path / config["gblocks_dir"]

if "species_list" not in config:
    config["species_list"] = [d.name[:-6] for d in genome_dir_path.iterdir() if d.is_file()]

#---- necessary functions ----
# def expand_template_from_merged_sequences(wildcards, template):
#     checkpoint_output = checkpoints.merged_sequences.get(**wildcards).output[0]
#     sample, = glob_wildcards(os.path.join(checkpoint_output, "merged_{sample}.fna"))
#     return expand(str(template), sample=sample)

def expand_template_from_common_ids(wildcards, template):
    checkpoint_output = checkpoints.common_ids.get(**wildcards).output[0]
    N, = glob_wildcards(os.path.join(checkpoint_output, "single_copy_busco_sequences.common.ids{N}"))
    return expand(str(template), N=N)

localrules: all

rule all:
    input:
        # busco:
        expand(busco_dir_path / "{species}/short_summary_{species}.txt", species=config["species_list"]),
        directory(output_dir_path / "single_copy_busco_sequences.common.dir"),
        lambda w: expand_template_from_common_ids(w, output_dir_path / "merged_sequences/{N}"),
        #
        # # mafft:
        lambda w: expand_template_from_merged_sequences(w, mafft_dir_path / "{N}/{sample}.fna"),
        lambda w: expand_template_from_merged_sequences(w, mafft_dir_path / "{N}/{sample}.faa"),
        #
        # # gblocks:
        # lambda w: expand_template_from_merged_sequences(w, gblocks_dir_path / "{sample}.fna-gb"),
        # lambda w: expand_template_from_merged_sequences(w, gblocks_dir_path / "{sample}.faa-gb"),

#---- load rules ----
include: "rules/busco.smk"
include: "rules/common_ids.smk"
include: "rules/mafft.smk"
include: "rules/gblocks.smk"